(()=>{"use strict";var e={n:t=>{var o=t&&t.__esModule?()=>t.default:()=>t;return e.d(o,{a:o}),o},d:(t,o)=>{for(var n in o)e.o(o,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:o[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const t=require("path");var o=e.n(t);const n=require("os");var r=e.n(n);const s=require("url");var a=e.n(s);const i=require("express");var l=e.n(i);const c=require("electron"),p=require("bitsharesjs-ws"),d=require("bitsharesjs"),h=require("uuid"),u={bitshares:{nodeList:[{url:"wss://node.xbts.io/ws"},{url:"wss://api.bts.mobi/ws"},{url:"wss://api.bitshares.bhuz.info/ws"},{url:"wss://btsws.roelandp.nl/ws"}]},bitshares_testnet:{nodeList:[{url:"wss://testnet.dex.trading/"},{url:"wss://testnet.xbts.io/ws"},{url:"wss://api-testnet.61bts.com/ws"}]}};let w=null,b=null;const m=async()=>{const{width:e,height:t}=c.screen.getPrimaryDisplay().workAreaSize;w=new c.BrowserWindow({width:e,height:t,minWidth:480,minHeight:695,maxWidth:e,maximizable:!0,maxHeight:t,useContentSize:!0,autoHideMenuBar:!0,webPreferences:{nodeIntegration:!1,contextIsolation:!0,sandbox:!0,preload:o().join(__dirname,"preload.js")},icon:__dirname+"/img/taskbar.png"});const n=l()();let r;r=o().join(process.resourcesPath,"astroDist"),n.use(l().static(r)),n.listen(8080,(()=>{console.log("Express server listening on port 8080")})),function(e){const t=[{label:"View",submenu:[{label:"Send to tray",click(){e.minimize()}},{label:"Reload",role:"reload"},{label:"Dev tools",role:"toggleDevTools"}]}],o=c.Menu.buildFromTemplate(t);c.Menu.setApplicationMenu(o)}(w),w.loadURL("http://localhost:8080/index.html"),b=new c.Tray(o().join(__dirname,"img","tray.png"));const s=c.Menu.buildFromTemplate([{label:"Show App",click:function(){w?.show()}},{label:"Quit",click:function(){b=null,c.app.quit()}}]);b.setToolTip("Bitshares Astro UI"),b.on("right-click",((e,t)=>{b?.popUpContextMenu(s)})),c.ipcMain.handle("fetchTopMarkets",(async(e,t)=>{const{chain:o}=t;let n;try{n=await fetch("bitshares"===o?"https://api.bitshares.ws/openexplorer/top_markets?top_n=100":"https://api.testnet.bitshares.ws/openexplorer/top_markets?top_n=50")}catch(e){console.log({error:e})}if(n&&n.ok)return await n.json()??null;console.log("Failed to fetch top markets")})),c.ipcMain.handle("fetchAccountHistory",(async(e,t)=>{const{chain:o,accountID:n}=t,r=`https://${"bitshares"===o?"api":"api.testnet"}.bitshares.ws/openexplorer/es/account_history?account_id=${n}&from_=${t.from??0}&size=${t.size??100}&from_date=${t.from_date??"2015-10-10"}&to_date=${t.to_date??"now"}&sort_by=${t.sort_by??"-operation_id_num"}&type=${t.type??"data"}&agg_field=${t.agg_field??"operation_type"}`;let s;try{s=await fetch(r,{method:"GET"})}catch(e){return console.log({error:e}),null}return s&&s.ok?await s.json()??null:(console.log("Couldn't fetch account history."),null)})),c.ipcMain.handle("generateDeepLink",(async(e,t)=>{const{usrChain:o,operationName:n,trxJSON:r}=t;let s;try{s=await async function(e,t,o){return new Promise((async(n,r)=>{const s=u[e].nodeList[0].url;try{await p.Apis.instance(s,!0,4e3,{enableCrypto:!1,enableOrders:!0},(e=>console.log({error:e}))).init_promise}catch(e){return console.log({error:e,location:"api instance failed"}),r(e)}const a=new d.TransactionBuilder;for(let e=0;e<o.length;e++)a.add_type_operation(t,o[e]);try{await a.update_head_block()}catch(e){return console.log({error:e,location:"update head block failed"}),void r(e)}try{await a.set_required_fees()}catch(e){return console.log({error:e,location:"set required fees failed"}),void r(e)}try{a.set_expire_seconds(7200)}catch(e){return console.log({error:e,location:"set expire seconds failed"}),void r(e)}try{a.finalize()}catch(e){return console.log({error:e,location:"finalize failed"}),void r(e)}let i;try{i=await(0,h.v4)()}catch(e){return console.log({error:e,location:"uuid generation failed"}),void r(e)}const l={type:"api",id:i,payload:{method:"injectedCall",params:["signAndBroadcast",JSON.stringify(a.toObject()),[]],appName:"Bitshares Astro UI",chain:"bitshares"===e?"BTS":"BTS_TEST",browser:"web browser",origin:"localhost"}};let c;try{c=encodeURIComponent(JSON.stringify(l))}catch(e){return console.log({error:e,location:"encode payload failed"}),void r(e)}n(c)}))}(o,n,r)}catch(e){console.log({error:e})}return s??null}));const i=["https://blocksights.info/","https://bts.exchange/","https://ex.xbts.io/","https://kibana.bts.mobi/","https://www.bitsharescan.info/","https://github.com/bitshares/beet"];c.ipcMain.on("openURL",((e,t)=>{try{const e=new(a().URL)(t).hostname;i.some((t=>new(a().URL)(t).hostname===e))?c.shell.openExternal(t):console.error(`Rejected opening URL with unsafe domain: ${e}`)}catch(e){console.error(`Failed to open URL: ${e.message}`)}})),b.on("click",(()=>{w?.setAlwaysOnTop(!0),w?.show(),w?.focus(),w?.setAlwaysOnTop(!1)})),b.on("balloon-click",(()=>{w?.setAlwaysOnTop(!0),w?.show(),w?.focus(),w?.setAlwaysOnTop(!1)}))};c.app.disableHardwareAcceleration();const g=r().platform();"win32"===g||"linux"===g?(c.app.requestSingleInstanceLock()||c.app.quit(),c.app.whenReady().then((()=>{m()}))):(c.app.whenReady().then((()=>{m()})),c.app.on("window-all-closed",(()=>{"darwin"!==process.platform&&c.app.quit()})),c.app.on("activate",(()=>{null===w&&m()})))})();
//# sourceMappingURL=background.js.map