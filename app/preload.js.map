{"version":3,"file":"preload.js","mappings":";;;;;;;;;;AAAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;ACNsD;AACtD;AACA,mDAAa;AACb;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,qCAAqC,iDAAW;AAChD,yCAAyC,iDAAW;AACpD;AACA,sCAAsC,iDAAW;AACjD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,CAAC","sources":["webpack://bitshares_astro_ui/external node-commonjs \"electron\"","webpack://bitshares_astro_ui/webpack/bootstrap","webpack://bitshares_astro_ui/webpack/runtime/compat get default export","webpack://bitshares_astro_ui/webpack/runtime/define property getters","webpack://bitshares_astro_ui/webpack/runtime/hasOwnProperty shorthand","webpack://bitshares_astro_ui/webpack/runtime/make namespace object","webpack://bitshares_astro_ui/./src/preload.js"],"sourcesContent":["module.exports = require(\"electron\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { ipcRenderer, contextBridge } from 'electron';\r\n\r\ncontextBridge.exposeInMainWorld('electron', {\r\n    // MISC\r\n    //openURL: async (target) => ipcRenderer.send('openURL', target), // Links to explorers\r\n    //notify: async (msg) => ipcRenderer.send('notify', msg), // Triggering an electron notification prompt\r\n    /*\r\n    setNode: (func) => { // For storing the current connected blockchain node\r\n        ipcRenderer.on('setNode', (event, args) => {\r\n            func(args);\r\n        });\r\n    },\r\n    */\r\n    // REST queries\r\n    fetchTopMarkets: async (args) => ipcRenderer.invoke('fetchTopMarkets', args),\r\n    fetchAccountHistory: async (args) => ipcRenderer.invoke('fetchAccountHistory', args),\r\n    // API queries\r\n    generateDeepLink: async (args) => ipcRenderer.invoke('generateDeepLink', args),\r\n    /*\r\n    // For logging background issues to renderer dev console\r\n    onMainLog: async (func) => {\r\n        ipcRenderer.on(\"mainLog\", (event, data) => {\r\n            func(data);\r\n        })\r\n    },\r\n    */\r\n});\r\n"],"names":[],"sourceRoot":""}