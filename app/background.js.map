{"version":3,"file":"background.js","mappings":"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","sources":["webpack://bitshares_astro_ui/webpack/bootstrap","webpack://bitshares_astro_ui/webpack/runtime/compat get default export","webpack://bitshares_astro_ui/webpack/runtime/define property getters","webpack://bitshares_astro_ui/webpack/runtime/hasOwnProperty shorthand","webpack://bitshares_astro_ui/external node-commonjs \"path\"","webpack://bitshares_astro_ui/external node-commonjs \"os\"","webpack://bitshares_astro_ui/external node-commonjs \"url\"","webpack://bitshares_astro_ui/external commonjs \"express\"","webpack://bitshares_astro_ui/external commonjs \"electron\"","webpack://bitshares_astro_ui/external commonjs \"bitsharesjs-ws\"","webpack://bitshares_astro_ui/external commonjs \"bitsharesjs\"","webpack://bitshares_astro_ui/external commonjs \"uuid\"","webpack://bitshares_astro_ui/./src/lib/deeplink.js","webpack://bitshares_astro_ui/./src/background.js","webpack://bitshares_astro_ui/./src/lib/applicationMenu.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"path\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"os\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"url\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"express\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"electron\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"bitsharesjs-ws\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"bitsharesjs\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"uuid\");","import { Apis } from \"bitsharesjs-ws\";\r\nimport { TransactionBuilder } from \"bitsharesjs\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst chains = {\r\n    bitshares: {\r\n        nodeList: [\r\n            {\r\n            url: \"wss://node.xbts.io/ws\",\r\n            },\r\n            {\r\n            url: \"wss://api.bts.mobi/ws\",\r\n            },\r\n            {\r\n            url: \"wss://api.bitshares.bhuz.info/ws\",\r\n            },\r\n            {\r\n            url: \"wss://btsws.roelandp.nl/ws\",\r\n            },\r\n        ],\r\n    },\r\n    bitshares_testnet: {\r\n        nodeList: [\r\n            {\r\n            url: \"wss://testnet.dex.trading/\",\r\n            },\r\n            {\r\n            url: \"wss://testnet.xbts.io/ws\",\r\n            },\r\n            {\r\n            url: \"wss://api-testnet.61bts.com/ws\",\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nasync function generateDeepLink(chain, opType, operations) {\r\n    return new Promise(async (resolve, reject) => {\r\n        const _node = chains[chain].nodeList[0].url\r\n\r\n        try {\r\n            await Apis.instance(\r\n                _node,\r\n                true,\r\n                4000,\r\n                { enableCrypto: false, enableOrders: true },\r\n                (error) => console.log({ error })\r\n            ).init_promise;\r\n        } catch (error) {\r\n            console.log({ error, location: \"api instance failed\" });\r\n            return reject(error);\r\n        }\r\n\r\n        const tr = new TransactionBuilder();\r\n        for (let i = 0; i < operations.length; i++) {\r\n            tr.add_type_operation(opType, operations[i]);\r\n        }\r\n\r\n        try {\r\n            await tr.update_head_block();\r\n        } catch (error) {\r\n            console.log({ error, location: \"update head block failed\" });\r\n            reject(error);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await tr.set_required_fees();\r\n        } catch (error) {\r\n            console.log({ error, location: \"set required fees failed\" });\r\n            reject(error);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            tr.set_expire_seconds(7200);\r\n        } catch (error) {\r\n            console.log({ error, location: \"set expire seconds failed\" });\r\n            reject(error);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            tr.finalize();\r\n        } catch (error) {\r\n            console.log({ error, location: \"finalize failed\" });\r\n            reject(error);\r\n            return;\r\n        }\r\n\r\n        let id;\r\n        try {\r\n            id = await uuidv4();\r\n        } catch (error) {\r\n            console.log({ error, location: \"uuid generation failed\" });\r\n            reject(error);\r\n            return;\r\n        }\r\n\r\n        const request = {\r\n            type: \"api\",\r\n            id: id,\r\n            payload: {\r\n                method: \"injectedCall\",\r\n                params: [\"signAndBroadcast\", JSON.stringify(tr.toObject()), []],\r\n                appName: \"Bitshares Astro UI\",\r\n                chain: chain === \"bitshares\" ? \"BTS\" : \"BTS_TEST\",\r\n                browser: \"web browser\",\r\n                origin: \"localhost\",\r\n            },\r\n        };\r\n\r\n        let encodedPayload;\r\n        try {\r\n            encodedPayload = encodeURIComponent(JSON.stringify(request));\r\n        } catch (error) {\r\n            console.log({ error, location: \"encode payload failed\" });\r\n            reject(error);\r\n            return;\r\n        }\r\n\r\n        resolve(encodedPayload);\r\n    });\r\n}\r\n\r\nexport { generateDeepLink };","import path from \"path\";\r\nimport os from \"os\";\r\nimport url from \"url\";\r\nimport express from \"express\";\r\n\r\nimport {\r\n    app,\r\n    BrowserWindow,\r\n    Menu,\r\n    Tray,\r\n    ipcMain,\r\n    screen,\r\n    shell,\r\n} from \"electron\";\r\n\r\nimport { initApplicationMenu } from \"./lib/applicationMenu.js\";\r\nimport { generateDeepLink } from \"./lib/deeplink.js\";\r\n\r\nlet mainWindow = null;\r\nlet tray = null;\r\n\r\nconst createWindow = async () => {\r\n    const { width, height } = screen.getPrimaryDisplay().workAreaSize;\r\n\r\n    mainWindow = new BrowserWindow({\r\n        width: width,\r\n        height: height,\r\n        minWidth: 480,\r\n        minHeight: 695,\r\n        maxWidth: width,\r\n        maximizable: true,\r\n        maxHeight: height,\r\n        useContentSize: true,\r\n        autoHideMenuBar: true,\r\n        webPreferences: {\r\n            nodeIntegration: false,\r\n            contextIsolation: true,\r\n            sandbox: true,\r\n            preload: path.join(__dirname, \"preload.js\"),\r\n        },\r\n        icon: __dirname + \"/img/taskbar.png\",\r\n    });\r\n    \r\n    const expressApp = express();\r\n\r\n    let astroDistPath;\r\n    if (process.env.NODE_ENV === 'development') {\r\n        astroDistPath = 'astroDist';\r\n    } else {\r\n        astroDistPath = path.join(process.resourcesPath, 'astroDist');\r\n    }\r\n\r\n    expressApp.use(express.static(astroDistPath));\r\n    expressApp.listen(8080, () => {\r\n        console.log(\"Express server listening on port 8080\");\r\n    });\r\n\r\n    initApplicationMenu(mainWindow);\r\n\r\n    mainWindow.loadURL('http://localhost:8080/index.html');\r\n\r\n    tray = new Tray(path.join(__dirname, \"img\", \"tray.png\"));\r\n    const contextMenu = Menu.buildFromTemplate([\r\n        {\r\n            label: \"Show App\",\r\n            click: function () {\r\n                mainWindow?.show();\r\n            },\r\n        },\r\n        {\r\n            label: \"Quit\",\r\n            click: function () {\r\n                tray = null;\r\n                app.quit();\r\n            },\r\n        },\r\n    ]);\r\n\r\n    tray.setToolTip(\"Bitshares Astro UI\");\r\n\r\n    tray.on(\"right-click\", (event, bounds) => {\r\n        tray?.popUpContextMenu(contextMenu);\r\n    });\r\n\r\n    ipcMain.handle(\"fetchTopMarkets\", async (event, arg) => {\r\n        const { chain } = arg;\r\n\r\n        let retrievedData;\r\n        try {\r\n            retrievedData = await fetch(\r\n                chain === \"bitshares\"\r\n                    ? `https://api.bitshares.ws/openexplorer/top_markets?top_n=100`\r\n                    : `https://api.testnet.bitshares.ws/openexplorer/top_markets?top_n=50`\r\n            );\r\n        } catch (error) {\r\n            console.log({error})\r\n        }\r\n      \r\n        if (!retrievedData || !retrievedData.ok) {\r\n            console.log(\"Failed to fetch top markets\");\r\n            return;\r\n        }\r\n    \r\n        const topMarkets = await retrievedData.json();\r\n        return topMarkets ?? null;\r\n    });\r\n\r\n    ipcMain.handle(\"fetchAccountHistory\", async (event, arg) => {\r\n        const { chain, accountID } = arg;\r\n\r\n        const from = arg.from ?? 0;\r\n        const size = arg.size ?? 100;\r\n        const from_date = arg.from_date ?? \"2015-10-10\";\r\n        const to_date = arg.to_date ?? \"now\";\r\n        const sort_by = arg.sort_by ?? \"-operation_id_num\";\r\n        const type = arg.type ?? \"data\";\r\n        const agg_field = arg.agg_field ?? \"operation_type\";\r\n\r\n        const url = `https://${\r\n                        chain === \"bitshares\" ? \"api\" : \"api.testnet\"\r\n                    }.bitshares.ws/openexplorer/es/account_history` +\r\n                    `?account_id=${accountID}` +\r\n                    `&from_=${from}` +\r\n                    `&size=${size}` +\r\n                    `&from_date=${from_date}` +\r\n                    `&to_date=${to_date}` +\r\n                    `&sort_by=${sort_by}` +\r\n                    `&type=${type}` +\r\n                    `&agg_field=${agg_field}`;\r\n\r\n        let history;\r\n        try {\r\n            history = await fetch(url, { method: \"GET\" });\r\n        } catch (error) {\r\n            console.log({ error });\r\n            return null;\r\n        }\r\n\r\n        if (!history || !history.ok) {\r\n            console.log(\"Couldn't fetch account history.\");\r\n            return null;\r\n        }\r\n\r\n        const accountHistory = await history.json();     \r\n        return accountHistory ?? null;\r\n    });\r\n\r\n    ipcMain.handle(\"generateDeepLink\", async (event, arg) => {\r\n        const { usrChain, operationName, trxJSON } = arg;\r\n\r\n        let deeplink;\r\n        try {\r\n            deeplink = await generateDeepLink(usrChain, operationName, trxJSON);\r\n        } catch (error) {\r\n            console.log({ error });\r\n        }\r\n\r\n        return deeplink ?? null;\r\n    });\r\n\r\n    const safeDomains = [\r\n        \"https://blocksights.info/\",\r\n        \"https://bts.exchange/\",\r\n        \"https://ex.xbts.io/\",\r\n        \"https://kibana.bts.mobi/\",\r\n        \"https://www.bitsharescan.info/\",\r\n        \"https://github.com/bitshares/beet\",\r\n      ];\r\n    ipcMain.on(\"openURL\", (event, arg) => {\r\n        try {\r\n            const parsedUrl = new url.URL(arg);\r\n            const domain = parsedUrl.hostname;\r\n\r\n            const isSafeDomain = safeDomains.some(safeDomain => {\r\n                const safeDomainHostname = new url.URL(safeDomain).hostname;\r\n                return safeDomainHostname === domain;\r\n            });\r\n\r\n            if (isSafeDomain) {\r\n                shell.openExternal(arg);\r\n            } else {\r\n                console.error(\r\n                    `Rejected opening URL with unsafe domain: ${domain}`\r\n                );\r\n            }\r\n        } catch (err) {\r\n            console.error(`Failed to open URL: ${err.message}`);\r\n        }\r\n    });    \r\n\r\n    tray.on(\"click\", () => {\r\n        mainWindow?.setAlwaysOnTop(true);\r\n        mainWindow?.show();\r\n        mainWindow?.focus();\r\n        mainWindow?.setAlwaysOnTop(false);\r\n    });\r\n\r\n    tray.on(\"balloon-click\", () => {\r\n        mainWindow?.setAlwaysOnTop(true);\r\n        mainWindow?.show();\r\n        mainWindow?.focus();\r\n        mainWindow?.setAlwaysOnTop(false);\r\n    });\r\n};\r\n\r\napp.disableHardwareAcceleration();\r\n\r\nconst currentOS = os.platform();\r\nif (currentOS === \"win32\" || currentOS === \"linux\") {\r\n    // windows + linux setup phase\r\n    const gotTheLock = app.requestSingleInstanceLock();\r\n\r\n    if (!gotTheLock) {\r\n        app.quit();\r\n    }\r\n\r\n    app.whenReady().then(() => {\r\n        createWindow();\r\n    });\r\n} else {\r\n    app.whenReady().then(() => {\r\n        createWindow();\r\n    });\r\n\r\n    app.on(\"window-all-closed\", () => {\r\n        if (process.platform !== \"darwin\") {\r\n            app.quit();\r\n        }\r\n    });\r\n\r\n    app.on(\"activate\", () => {\r\n        if (mainWindow === null) {\r\n            createWindow();\r\n        }\r\n    });\r\n}\r\n","import {app, Menu} from 'electron';\r\n\r\n/**\r\n * For configuring the electron window menu\r\n */\r\nexport function initApplicationMenu(mainWindow) {\r\n    const template = [\r\n      {\r\n        label: 'View',\r\n        submenu: [\r\n          {\r\n            label: 'Send to tray',\r\n            click() {\r\n              mainWindow.minimize();\r\n            }\r\n          },\r\n          { label: 'Reload', role: 'reload' },\r\n          { label: 'Dev tools', role: 'toggleDevTools' }\r\n        ]\r\n      }\r\n    ];\r\n    const menu = Menu.buildFromTemplate(template);\r\n    Menu.setApplicationMenu(menu);\r\n}\r\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","require","chains","bitshares","nodeList","url","bitshares_testnet","mainWindow","tray","createWindow","async","width","height","screen","getPrimaryDisplay","workAreaSize","BrowserWindow","minWidth","minHeight","maxWidth","maximizable","maxHeight","useContentSize","autoHideMenuBar","webPreferences","nodeIntegration","contextIsolation","sandbox","preload","__dirname","icon","expressApp","astroDistPath","process","resourcesPath","use","listen","console","log","template","label","submenu","click","minimize","role","menu","Menu","buildFromTemplate","setApplicationMenu","initApplicationMenu","loadURL","Tray","contextMenu","show","app","quit","setToolTip","on","event","bounds","popUpContextMenu","ipcMain","handle","arg","chain","retrievedData","fetch","error","ok","json","accountID","from","size","from_date","to_date","sort_by","type","agg_field","history","method","usrChain","operationName","trxJSON","deeplink","opType","operations","Promise","resolve","reject","_node","Apis","instance","enableCrypto","enableOrders","init_promise","location","tr","TransactionBuilder","i","length","add_type_operation","update_head_block","set_required_fees","set_expire_seconds","finalize","id","request","payload","params","JSON","stringify","toObject","appName","browser","origin","encodedPayload","encodeURIComponent","generateDeepLink","safeDomains","domain","hostname","some","safeDomain","shell","openExternal","err","message","setAlwaysOnTop","focus","disableHardwareAcceleration","currentOS","requestSingleInstanceLock","whenReady","then","platform"],"sourceRoot":""}